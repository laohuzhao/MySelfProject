一、消息中间件概述
1.消息中间件的好处：解耦、异步、安全可靠、保证顺序
2.什么是消息中间件：发送和接受数据、利用高效可靠的异步消息传递机制集成分布式系统
3.什么是JMS（Java Message Service）规范:Java平台面向消息中间件的API
4.什么是AMQP（advanced message queuing protocol）协议：是一个统一提供消息服务的应用层标准协议
5.常用消息中间件：ActiveMQ(适合中小企业，不适合好几千个队列的应用)
                  RabbitMQ（适合对稳定性要求高的企业级应用）
                  Kafka（应用在大数据日志处理或对实时性、可靠性（少量数据丢失）要求较低的场景应用）
二、初始JMS
2.1-JMS相关概念
    1.提供者：实现JMS规范的消息中间件服务器
    2.客户端：发送或接受消息的应用程序
    3.生产者/发布者：创建并发布消息的客户端
    4.消费者/订阅者：接收并处理消息的客户端
    5.消息：应用程序之间传递的内容
    6.消息模式：在客户端之间传递消息的方式，JMS中定义了主题和队列两种模式
2.2-队列模式
    1.特性：客户端包括生产者和消费者、队列中的消息只能被一个消息消费者消费、消费者可以随时消费队列中的消息
    2.队列的模型：生产者----JMS列队——消费者
2.3-主题模式
    1.特性：客户端包括发布者和订阅者、主题中的消息被所有订阅者消费、消费者不能消费订阅之前的消息
    2.主题的模式：发布者——JMS主题——订阅者
2.4-JMS编码接口
    1.ConnectionFactory用户创建连接到消息中间件的连接工厂
    2.Connection代表了应用程序和消息服务器之间的通信链路
    3.Destination消息发布和接收的地点，包括队列和主题
    4.Session表示一个单线程的上下文，用于发送和接收消息
    5.MessageProducer由会话创建，用于发送消息到目标
    6.MessageConsumer由会话创建，用于接收发送到目标的消息
    7.Message 是在消费者和生产者之间传送的对象， 消息头，一组消息属性，一个消息体
    ......JMS编码接口关系图如图所示；只有符合规范的中间件适用这个图....例如ActiveMQ符合规范
